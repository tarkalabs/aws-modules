
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: shared-alb-http
  annotations:
    kubernetes.io/ingress.class: shared-alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: shared-alb
    alb.ingress.kubernetes.io/ip-address-type: ipv4
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: ${public_subnets}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/load-balancer-name: ${cluster_name}-alb-public
    alb.ingress.kubernetes.io/load-balancer-attributes: routing.http2.enabled=true
    alb.ingress.kubernetes.io/actions.ssl-redirect: >
      {"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}
spec:
  defaultBackend:
    service:
      name: ssl-redirect
      port:
        name: use-annotation
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: shared-alb-https
  annotations:
    kubernetes.io/ingress.class: shared-alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: shared-alb
    alb.ingress.kubernetes.io/ip-address-type: ipv4
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: ${public_subnets}
    alb.ingress.kubernetes.io/certificate-arn: ${acm_cert_arn}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/load-balancer-name: ${cluster_name}-alb-public
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-1-2017-01
    alb.ingress.kubernetes.io/load-balancer-attributes: routing.http2.enabled=true
    alb.ingress.kubernetes.io/actions.response-501: >
      {"type":"fixed-response","fixedResponseConfig":{"contentType":"text/plain","statusCode":"501","messageBody":"Route not implemented"}}
spec:
  defaultBackend:
    service:
      name: response-501
      port:
        name: use-annotation
